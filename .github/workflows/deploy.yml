name: Deploy Next.js to cPanel

on:
  push:
    branches:
      - development # Trigger deployment on push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build Next.js app
        run: npm run build

      - name: Prepare staging directory
        run: |
          mkdir staging
          cp -r $(ls | grep -v 'node_modules\|staging') staging/
          # Adjust the grep pattern to exclude any other directories or files as necessary

      - name: Compress build output from staging directory
        run: |
          tar -czf build.tar.gz -C staging .
          rm -rf staging

      - name: Deploy to cPanel
        env:
          CPANEL_HOST: ${{ secrets.SSH_HOST }}
          CPANEL_USER: ${{ secrets.SSH_USERNAME }}
          CPANEL_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          CPANEL_PORT: 22
        run: |
          # Optional: Add SSH key if using key-based authentication
          echo "$CPANEL_KEY" > private_key
          chmod 600 private_key
          eval $(ssh-agent -s)
          ssh-add private_key

          # scp -v -r -P $CPANEL_PORT \
          #   -o StrictHostKeyChecking=no \
          #   ./* $CPANEL_USER@$CPANEL_HOST:/home/ozfea/repositories/nrk-next/

          # Transfer compressed build output
          scp -v -P $CPANEL_PORT \
            -o StrictHostKeyChecking=no \
            build.tar.gz $CPANEL_USER@$CPANEL_HOST:/home/ozfea/repositories/nrk-next/

          # Extract the files on the server
          ssh -p $CPANEL_PORT $CPANEL_USER@$CPANEL_HOST "tar -xzf /home/ozfea/repositories/nrk-next/build.tar.gz -C /home/ozfea/repositories/nrk-next/ && rm /home/ozfea/repositories/nrk-next/build.tar.gz"


          # Cleanup
          ssh-agent -k
          rm private_key
